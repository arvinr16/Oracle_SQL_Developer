<== Notes ==>
1. Mengumpulkan tugas dijadikan satu file PDF saja, tidak perlu dipisah satu-satu.
2. Download Oracle Database XE
3. Perlu diingat bahwasanya harus ingat passwordnya pada proses instalasi app tersebut
<----------------------------------------------------------------------------------------------------------------------------->



=> Beberapa Query SQL PLUS tentang USER yang bisa digunakan:
1. 'CREATE USER (nama user) IDENTIFIED BY (password user); = Digunakan untuk membuat user baru di SQLPLUS.

2. 'GRANT CONNECT, RESOURCE TO (nama user); = Digunakan untuk memberikan hak akses minimal.

3. 'DROP USER (nama user) CASCADE; = Digunakan untuk menghapus user yang telah ada.

4. 'SELECT username FROM dba_users;' = Digunakan untuk mengecek daftar user yang ada.
   'SELECT username FROM all_users;' = Bisa menggunakan ini jika tidak ada akses ke DBA.
   'SELECT * FROM (nama user);'     = Digunakan untuk melihat user yang kita punya aksesnya.

5. 'SHOW USER' = Digunakan untuk melihat user yang sedang aktif saat ini.

6. 'CONNECT (nama_user)/(password)@(nama_servis);' = Bisa digunakan untuk mengganti user ketika kita sudah-
                                                     di dalam SQL PLUS.
   'CONN (nama_user)/(password)@(nama_servis);'    = Ini adalah versi singkat untuk mengganti user.
                                                     Kita bisa menggunakan service name berupa 'XE', 'XEPDB1'.

7. 'ALTER USER (nama_user) IDENTIFIED BY (password_baru);' = Digunakan untuk mereset password user yang ada.

8. 'ALTER USER (nama_user) ACCOUNT LOCK;'   = Digunakan untuk menonaktifkan user.
   'ALTER USER (nama_user) ACCOUNT UNLOCK;' = Digunakan untuk mengaktifkan user.

9. 'CLEAR SCREEN' = Digunakan untuk membersihkan tampilan CLI SQL PLUS dari command-command yang sudah dijalankan.
<----------------------------------------------------------------------------------------------------------------------------->



=> Beberapa Query SQL PLUS yang bisa digunakan untuk memberikan hak akses, dll:
1. 'GRANT ALL PRIVILEGES to (nama_user);' = Digunakan untuk memberikan semua hak akses kepada suatu user.

2. 'GRANT CONNECT to (nama_user);' = Digunakan untuk kita bisa login ke user yang dipilih di Query tersebut.

3. 'GRANT DBA TO (nama_user);' = Digunakan untuk memberikan hak SUPERUSER, gunakan dengan hati-hati!

4. 'SELECT * FROM dba_sys_privs WHERE grantee = '(NAMA_USER);'  = Digunakan untuk melihat hak akses user 'System Privileges'.
   'SELECT * FROM dba_tab_privs WHERE grantee = '(NAMA_USER);'  = Digunakan untuk melihat hak akses user 'Object Privileges'.
   'SELECT * FROM dba_role_privs WHERE grantee = '(NAMA_USER);' = Digunakan untuk melihat 'role' yang dimilik user.
   *untuk nama user jika ingin melihat hak akses harus KAPITAL semua ya hurufnya.
<----------------------------------------------------------------------------------------------------------------------------->



=> Beberapa Query untuk manajemen Table:
1. 'CREATE TABLE (nama_table) (
      customer_id NUMBER PRIMARY KEY,
      name        VARCHAR2(50),
      email       VARCHAR2(100)
);'
Digunakan untuk membuat table sederhana menggunakan Query.

2. 'SELECT table_name FROM user_tables;' = Digunakan untuk melihat daftar table yang dimiliki user.

3. 'ALTER TABLE (nama_table) ADD (nama_kolom) contoh: phone VARCHAR2(20);' = Digunakan untuk menambah Kolom ke Table.

4. 'ALTER TABLE (nama_table) DROP COLUMN (nama_kolom);' = Digunakan untuk menghapus Kolom dari Table.
   contoh: 'ALTER TABLE nama_orang DROP COLUMN id_nama;'

5. 'DROP TABLE (nama_table);' = Digunakan untuk menghapus Table.

6. 'SELECT COUNT(*) FROM TESTING;' = Digunakan untuk melihat isi tabel, apakah benar-benar kosong atau tidak ada data.
<----------------------------------------------------------------------------------------------------------------------------->



=> Beberapa Query untuk Query Data/ DML(Data Manipulation Language):
1. 'INSERT INTO (nama_table) (customer_id, name, email) VALUES (1, 'Paijo', 'paijo@email.com');'
   Digunakan untuk mengisi data pada Table.
   contoh: 'INSERT INTO nama_wayang (id_nama, nama, alamat) values (1, 'Semar', 'Jawa');'

2. 'SELECT * FROM (nama_table);' = Digunakan untuk menampilkan semua data pada Table.

3. 'UPDATE (nama_table) SET (nama_kolom) = (data_yang_diupdate) WHERE (nama_id) = (nomor_id);'
   Digunakan untuk mengupdate Data Kolom pada suatu Table.

4. 'DELETE FROM (nama_table) where (nama_kolom) = (no_id_data_yang_dihapus);'
   Digunakan untuk menghapus Data pada Kolom pada suatu Table.
<----------------------------------------------------------------------------------------------------------------------------->



=> Query untuk filtering:
1. 'SELECT * FROM (nama_table) WHERE (nama_kolom) = (data_yang_difilter);'
   Digunakan untuk memfilter data Kolom pada suatu Table.
2. 'LENGTH' = Digunakan untuk menampilkan jumlah karakter dari sebuah kolom pada table.
3. 'SUBSTR' = Digunakan untuk menampilkan 5 huruf pertama dari sebuah kolom pada table.
4. 'SELECT (nama column) NVL2(nama column, 'Pernyataan', 'Pernyataan jika tidak ditemukan') as (column baru) from (nama table);
   Contoh: 
   = Digunakan untuk membuat suatu pernyataan pada sebuah column table, bukan hanya pernyataan saja tetapi memberikan solusi-
   jika pernyataan tersebut salah atau tidak ditemukan.
5. 'SELECT
     (nama column),
     case
      when (nama column) > (pernyataan tentang angka) then '(Pernyataan)'
      when (nama column) > (pernyataan tentang angka) then '(Pernyataan)'
      else '(pernyataan jika tidak ditemukan)'
     end as (column untuk menampilkan data yang diberikan pernyataan)
     from (nama column);
     Contoh:
     select
      Nama_Produk,
      Harga,
      case
         when Harga > 10000000 then 'Premium'
         when Harga > 2000000 then 'Menengah'
         else 'Murah'
      end as Label_Harga
      from produk;
<----------------------------------------------------------------------------------------------------------------------------->



=> Query lain yang penting:
1. 'SELECT * FROM all_users;' = Digunakan untuk melihat user yang terdaftar di SQL Developer App.

2. 'SELECT table_name FROM user_tables; = Digunakan untuk melihat daftar table yang dimiliki user.

3. 'SELECT * FROM (nama table);' = Digunakan untuk menampilkan beberapa isi data dari sebuah table.

4. 'SHOW CON_NAME;' = Digunakan untuk menampilkan Service/Container yang aktif.

5. 'SELECT role FROM dba_roles;' = Digunakan untuk menampilkan semua role yang ada di Service/Container.

6. Syntax Komentar: 1. Satu line atau satu garis cukup menggunakan '--'
                       contoh: '-- Testing --'
                    2. Multiple line atau banyak baris bis menggunakan '/**/'
                       contoh: '/* Testing */'
<----------------------------------------------------------------------------------------------------------------------------->

<== Notes Penting ==>
1. Besok ketika sudah membuat aplikasi real atau proses pembangunan aplikasi menggunakan framework seperti 'Laravel', kita-
   sebenarnya tidak terlalu membutuhkan kode-kode dari SQL ini, namun pembelajaran SQL ini penting untuk dilakukan untuk-
   tujuan pemahaman fundamental dalam bagian 'Database'.
   Ketika kita membuat aplikasi dengan menggunakan framework seperti 'Laravel' pada saat kita input data untuk bagian database,-
   kita tidak perlu menggunakan kode bahasa SQL, tetapi kita akan langsung menggunakan kode bahasa PHP, yang nantinya pada-
   setiap data yang kita inputkan menggunakan kode bahasa PHP tersebut, akan langsung otomatis masuk ke Blueprint database-
   framework 'Laravel' yang kita gunakan.